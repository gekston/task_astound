// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$-icon-face-book-name: 'Icon-face-book';
$-icon-face-book-x: 46px;
$-icon-face-book-y: 0px;
$-icon-face-book-offset-x: -46px;
$-icon-face-book-offset-y: 0px;
$-icon-face-book-width: 8px;
$-icon-face-book-height: 17px;
$-icon-face-book-total-width: 54px;
$-icon-face-book-total-height: 45px;
$-icon-face-book-image: '../image/sprite.png';
$-icon-face-book: (46px, 0px, -46px, 0px, 8px, 17px, 54px, 45px, '../image/sprite.png', 'Icon-face-book', );
$-icon-instagramt-name: 'Icon-instagramt';
$-icon-instagramt-x: 23px;
$-icon-instagramt-y: 0px;
$-icon-instagramt-offset-x: -23px;
$-icon-instagramt-offset-y: 0px;
$-icon-instagramt-width: 18px;
$-icon-instagramt-height: 18px;
$-icon-instagramt-total-width: 54px;
$-icon-instagramt-total-height: 45px;
$-icon-instagramt-image: '../image/sprite.png';
$-icon-instagramt: (23px, 0px, -23px, 0px, 18px, 18px, 54px, 45px, '../image/sprite.png', 'Icon-instagramt', );
$-icon-pinterest-name: 'Icon-pinterest';
$-icon-pinterest-x: 0px;
$-icon-pinterest-y: 24px;
$-icon-pinterest-offset-x: 0px;
$-icon-pinterest-offset-y: -24px;
$-icon-pinterest-width: 16px;
$-icon-pinterest-height: 21px;
$-icon-pinterest-total-width: 54px;
$-icon-pinterest-total-height: 45px;
$-icon-pinterest-image: '../image/sprite.png';
$-icon-pinterest: (0px, 24px, 0px, -24px, 16px, 21px, 54px, 45px, '../image/sprite.png', 'Icon-pinterest', );
$-icon-tube-name: 'Icon-tube';
$-icon-tube-x: 0px;
$-icon-tube-y: 0px;
$-icon-tube-offset-x: 0px;
$-icon-tube-offset-y: 0px;
$-icon-tube-width: 18px;
$-icon-tube-height: 19px;
$-icon-tube-total-width: 54px;
$-icon-tube-total-height: 45px;
$-icon-tube-image: '../image/sprite.png';
$-icon-tube: (0px, 0px, 0px, 0px, 18px, 19px, 54px, 45px, '../image/sprite.png', 'Icon-tube', );
$-icon-twitter-name: 'Icon-twitter';
$-icon-twitter-x: 23px;
$-icon-twitter-y: 23px;
$-icon-twitter-offset-x: -23px;
$-icon-twitter-offset-y: -23px;
$-icon-twitter-width: 17px;
$-icon-twitter-height: 13px;
$-icon-twitter-total-width: 54px;
$-icon-twitter-total-height: 45px;
$-icon-twitter-image: '../image/sprite.png';
$-icon-twitter: (23px, 23px, -23px, -23px, 17px, 13px, 54px, 45px, '../image/sprite.png', 'Icon-twitter', );
$spritesheet-width: 54px;
$spritesheet-height: 45px;
$spritesheet-image: '../image/sprite.png';
$spritesheet-sprites: ($-icon-face-book, $-icon-instagramt, $-icon-pinterest, $-icon-tube, $-icon-twitter, );
$spritesheet: (54px, 45px, '../image/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
