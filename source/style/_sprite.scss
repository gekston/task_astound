// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$grey-stars-name: 'grey-stars';
$grey-stars-x: 0px;
$grey-stars-y: 0px;
$grey-stars-offset-x: 0px;
$grey-stars-offset-y: 0px;
$grey-stars-width: 90px;
$grey-stars-height: 18px;
$grey-stars-total-width: 170px;
$grey-stars-total-height: 133px;
$grey-stars-image: '../image/sprite.png';
$grey-stars: (0px, 0px, 0px, 0px, 90px, 18px, 170px, 133px, '../image/sprite.png', 'grey-stars', );
$icon-close-name: 'icon-close';
$icon-close-x: 141px;
$icon-close-y: 110px;
$icon-close-offset-x: -141px;
$icon-close-offset-y: -110px;
$icon-close-width: 15px;
$icon-close-height: 15px;
$icon-close-total-width: 170px;
$icon-close-total-height: 133px;
$icon-close-image: '../image/sprite.png';
$icon-close: (141px, 110px, -141px, -110px, 15px, 15px, 170px, 133px, '../image/sprite.png', 'icon-close', );
$icon-facebook-name: 'icon-facebook';
$icon-facebook-x: 0px;
$icon-facebook-y: 46px;
$icon-facebook-offset-x: 0px;
$icon-facebook-offset-y: -46px;
$icon-facebook-width: 41px;
$icon-facebook-height: 41px;
$icon-facebook-total-width: 170px;
$icon-facebook-total-height: 133px;
$icon-facebook-image: '../image/sprite.png';
$icon-facebook: (0px, 46px, 0px, -46px, 41px, 41px, 170px, 133px, '../image/sprite.png', 'icon-facebook', );
$icon-instagram-name: 'icon-instagram';
$icon-instagram-x: 46px;
$icon-instagram-y: 46px;
$icon-instagram-offset-x: -46px;
$icon-instagram-offset-y: -46px;
$icon-instagram-width: 41px;
$icon-instagram-height: 41px;
$icon-instagram-total-width: 170px;
$icon-instagram-total-height: 133px;
$icon-instagram-image: '../image/sprite.png';
$icon-instagram: (46px, 46px, -46px, -46px, 41px, 41px, 170px, 133px, '../image/sprite.png', 'icon-instagram', );
$icon-pinterest-name: 'icon-pinterest';
$icon-pinterest-x: 95px;
$icon-pinterest-y: 0px;
$icon-pinterest-offset-x: -95px;
$icon-pinterest-offset-y: 0px;
$icon-pinterest-width: 41px;
$icon-pinterest-height: 41px;
$icon-pinterest-total-width: 170px;
$icon-pinterest-total-height: 133px;
$icon-pinterest-image: '../image/sprite.png';
$icon-pinterest: (95px, 0px, -95px, 0px, 41px, 41px, 170px, 133px, '../image/sprite.png', 'icon-pinterest', );
$icon-twitter-name: 'icon-twitter';
$icon-twitter-x: 95px;
$icon-twitter-y: 46px;
$icon-twitter-offset-x: -95px;
$icon-twitter-offset-y: -46px;
$icon-twitter-width: 41px;
$icon-twitter-height: 41px;
$icon-twitter-total-width: 170px;
$icon-twitter-total-height: 133px;
$icon-twitter-image: '../image/sprite.png';
$icon-twitter: (95px, 46px, -95px, -46px, 41px, 41px, 170px, 133px, '../image/sprite.png', 'icon-twitter', );
$icon-ytube-name: 'icon-ytube';
$icon-ytube-x: 0px;
$icon-ytube-y: 92px;
$icon-ytube-offset-x: 0px;
$icon-ytube-offset-y: -92px;
$icon-ytube-width: 41px;
$icon-ytube-height: 41px;
$icon-ytube-total-width: 170px;
$icon-ytube-total-height: 133px;
$icon-ytube-image: '../image/sprite.png';
$icon-ytube: (0px, 92px, 0px, -92px, 41px, 41px, 170px, 133px, '../image/sprite.png', 'icon-ytube', );
$red-stars-name: 'red-stars';
$red-stars-x: 0px;
$red-stars-y: 23px;
$red-stars-offset-x: 0px;
$red-stars-offset-y: -23px;
$red-stars-width: 90px;
$red-stars-height: 18px;
$red-stars-total-width: 170px;
$red-stars-total-height: 133px;
$red-stars-image: '../image/sprite.png';
$red-stars: (0px, 23px, 0px, -23px, 90px, 18px, 170px, 133px, '../image/sprite.png', 'red-stars', );
$slider-shevron-next-name: 'slider-shevron-next';
$slider-shevron-next-x: 141px;
$slider-shevron-next-y: 0px;
$slider-shevron-next-offset-x: -141px;
$slider-shevron-next-offset-y: 0px;
$slider-shevron-next-width: 29px;
$slider-shevron-next-height: 50px;
$slider-shevron-next-total-width: 170px;
$slider-shevron-next-total-height: 133px;
$slider-shevron-next-image: '../image/sprite.png';
$slider-shevron-next: (141px, 0px, -141px, 0px, 29px, 50px, 170px, 133px, '../image/sprite.png', 'slider-shevron-next', );
$slider-shevron-prev-name: 'slider-shevron-prev';
$slider-shevron-prev-x: 141px;
$slider-shevron-prev-y: 55px;
$slider-shevron-prev-offset-x: -141px;
$slider-shevron-prev-offset-y: -55px;
$slider-shevron-prev-width: 29px;
$slider-shevron-prev-height: 50px;
$slider-shevron-prev-total-width: 170px;
$slider-shevron-prev-total-height: 133px;
$slider-shevron-prev-image: '../image/sprite.png';
$slider-shevron-prev: (141px, 55px, -141px, -55px, 29px, 50px, 170px, 133px, '../image/sprite.png', 'slider-shevron-prev', );
$spritesheet-width: 170px;
$spritesheet-height: 133px;
$spritesheet-image: '../image/sprite.png';
$spritesheet-sprites: ($grey-stars, $icon-close, $icon-facebook, $icon-instagram, $icon-pinterest, $icon-twitter, $icon-ytube, $red-stars, $slider-shevron-next, $slider-shevron-prev, );
$spritesheet: (170px, 133px, '../image/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
